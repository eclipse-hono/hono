<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.eclipse.hono</groupId>
    <artifactId>hono-bom</artifactId>
    <version>0.5-M9-SNAPSHOT</version>
    <relativePath>../bom</relativePath>
  </parent>

  <artifactId>hono-artemis</artifactId>
  <packaging>jar</packaging>
  <name>Hono Artemis</name>
  <description>Module for building a Docker image for ActiveMQ Artemis using the Hono default configuration.</description>

  <properties>
    <maven.javadoc.skip>true</maven.javadoc.skip>
    <maven.source.skip>true</maven.source.skip>
    <gpg.skip>true</gpg.skip>
    <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-demo-certs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-legal</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!--
          Copy legal documents from "legal" module to "target/classes" folder
          so that we make sure to include legal docs in all modules.
         -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <!--
          Execution and configuration for copying certificates from related module
          to "target/classes" folder so that we can include them in the image.
         -->
        <executions>
          <execution>
            <id>copy_demo_certs</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeArtifactIds>hono-demo-certs</includeArtifactIds>
              <outputDirectory>${project.build.directory}/certs</outputDirectory>
              <excludes>META-INF/**</excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>build-docker-image</id>
      <activation>
        <property>
          <name>docker.host</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <build>
                    <from>enmasseproject/activemq-artemis:${artemis.version}-1</from>
                    <ports>
                      <port>5671</port>
                    </ports>
                    <assembly>
                      <mode>dir</mode>
                      <basedir>/opt/artemis</basedir>
                      <inline>
                        <id>config</id>
                        <fileSets>
                          <fileSet>
                            <directory>${project.basedir}/etc</directory>
                            <outputDirectory>etc</outputDirectory>
                            <includes>
                              <include>broker.xml</include>
                              <include>artemis-users.properties</include>
                              <include>artemis-roles.properties</include>
                            </includes>
                          </fileSet>
                          <fileSet>
                            <directory>${project.build.directory}/certs</directory>
                            <outputDirectory>etc</outputDirectory>
                            <includes>
                              <include>artemisKeyStore.p12</include>
                              <include>trustStore.jks</include>
                            </includes>
                          </fileSet>
                        </fileSets>
                      </inline>
                    </assembly>
                  </build>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>