# Copyright (c) 2020, 2021 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
# This workflow will build all of Hono's components, run unit tests and create
# Docker images. Finally, the integration tests are run.
# The job uses a matrix for the distinct device registry implementations. Thus,
# for each registry implementation, the workflow is run on a separate VM.

name: Build and run integration tests

on: [push,pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        device-registry: [file,jdbc,mongodb]
        include:
          # Use quarkus-jvm images: file registry, kafka messaging, spring-boot-command-router with embedded cache
          - device-registry: file
            commandrouting-mode: spring-boot-command-router
            commandrouting-cache: embedded
            component-type: quarkus-jvm
            messaging-type: kafka
          # Use spring-boot images: jdbc registry, amqp messaging, dev-con-service with embedded cache
          - device-registry: jdbc
            commandrouting-mode: dev-con-service
            commandrouting-cache: embedded
            component-type: spring-boot
            messaging-type: amqp
          # Use quarkus-jvm images: mongodb registry, amqp messaging, command-router with server cache
          - device-registry: mongodb
            commandrouting-mode: command-router
            commandrouting-cache: server
            component-type: quarkus-jvm
            messaging-type: amqp

    name: "Use ${{ matrix.component-type }} images: ${{ matrix.device-registry }} registry, ${{ matrix.messaging-type }} messaging, ${{ matrix.commandrouting-mode }} with ${{ matrix.commandrouting-cache }} cache"
    steps:
    - uses: actions/checkout@v2
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Build all components (incl. unit tests) and run integration tests
      run: mvn install -B -e -DcreateJavadoc=true -DCI=$CI -Dhono.components.type=${{ matrix.component-type }} -Dhono.deviceregistry.type=${{ matrix.device-registry }} -Dhono.messaging-infra.type=${{ matrix.messaging-type }} -Dhono.commandrouting.mode=${{ matrix.commandrouting-mode }} -Dhono.commandrouting.cache=${{ matrix.commandrouting-cache }} -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Pbuild-docker-image,run-tests
