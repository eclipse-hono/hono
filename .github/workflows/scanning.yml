# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
# Scan repository and containers for security vulnerabilities, secrets and
# misconfigurations.

name: Vulnerability and Misconfiguration Scan

on:
  schedule:
  # run every night at 4:11 AM (UTC)
  - cron: '11 4 * * *'
  # enable running the workflow manually
  workflow_dispatch:

jobs:
  scan:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        artifactId:
          - hono-adapter-amqp
          - hono-adapter-coap
          - hono-adapter-http
          - hono-adapter-lora
          - hono-adapter-mqtt
          - hono-adapter-sigfox
          - hono-service-auth
          - hono-service-command-router-infinispan
          - hono-service-device-registry-jdbc
          - hono-service-device-registry-mongodb

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.11

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"

      - name: Create Container Image
        run: |
          mvn -B -e -DCI=$CI -DskipTests -Pbuild-docker-image,metrics-prometheus --projects ":${{ matrix.artifactId }}" --also-make clean install
          docker image ls --format "{{.Repository}}:{{.Tag}}" "eclipse/${{ matrix.artifactId }}"

      - name: Install Trivy
        uses: aquasecurity/setup-trivy@v0.2.4

      - name: Scan Docker images
        run: |
          mkdir -p results
          imageName=$(docker image ls --format "{{.Repository}}:{{.Tag}}" "eclipse/${{ matrix.artifactId }}")
          echo "Scanning image $imageName ..."
          trivy image "$imageName" --timeout 15m0s --ignore-unfixed --severity HIGH,CRITICAL --format sarif --output "results/${{ matrix.artifactId }}.sarif"

      - name: Upload Docker image scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "results/${{ matrix.artifactId }}.sarif"
          category: "Container Image ${{ matrix.artifactId }}"
