<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2016, 2018 Contributors to the Eclipse Foundation
   
    See the NOTICE file(s) distributed with this work for additional
    information regarding copyright ownership.
   
    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License 2.0 which is available at
    http://www.eclipse.org/legal/epl-2.0
   
    SPDX-License-Identifier: EPL-2.0
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.hono</groupId>
        <artifactId>hono-bom</artifactId>
        <version>0.9-M1-SNAPSHOT</version>
        <relativePath>../bom</relativePath>
    </parent>

    <artifactId>hono-deploy</artifactId>
    <name>Hono Deployment</name>
    <url>https://www.eclipse.org/hono</url>

    <description>Scripts for deploying a Hono instance to a Docker Swarm, a Kubernetes or an Openshift cluster using example configuration properties.</description>

    <properties>
        <docker.skip.build>true</docker.skip.build>
        <hono.messaging.host>hono-service-messaging.hono</hono.messaging.host>
        <hono.registration.host>hono-service-device-registry.hono</hono.registration.host>
        <hono.auth.host>hono-service-auth.hono</hono.auth.host>
        <!--
          The shared secret to use for creating/validating registration assertions.
         -->
        <hono.regAssertion.sharedSecret>g#aWO!BUm7aj*#%X*VGXKFhxkhNrMNj0</hono.regAssertion.sharedSecret>
        <default-java-options>-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80</default-java-options>

        <!-- This is only used by the Docker Swarm deployment -->
        <prometheus.image.name>prom/prometheus:v2.3.1</prometheus.image.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.hono</groupId>
            <artifactId>hono-client</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.hono</groupId>
            <artifactId>hono-legal</artifactId>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.hono</groupId>
            <artifactId>hono-demo-certs</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/deploy</directory>
                <targetPath>${project.build.directory}/deploy</targetPath>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/sandbox</directory>
                <targetPath>${project.build.directory}/sandbox</targetPath>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!--<plugin>-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-checkstyle-plugin</artifactId>-->
            <!--</plugin>-->
            <plugin>
                <!--
                  Copy legal documents from "legal" module to "target/classes" folder
                  so that we make sure to include legal docs in all modules.
                 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <!--
                          Execution and configuration for copying certificates from related module
                          to "target/classes" folder so that we can include them in the image.
                         -->
                        <id>copy_demo_certs</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>
                                hono-demo-certs
                            </includeArtifactIds>
                            <outputDirectory>${project.build.directory}/config</outputDirectory>
                            <includes>
                                *.pem,
                                *.jks,
                                *.p12
                            </includes>
                            <useSubDirectoryPerArtifact>true</useSubDirectoryPerArtifact>
                            <stripClassifier>true</stripClassifier>
                            <stripVersion>true</stripVersion>
                            <excludeTransitive>true</excludeTransitive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create_docker_config_files</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/config</directory>
                                    <targetPath>deploy/docker</targetPath>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <filters>
                                <filter>${project.basedir}/src/main/docker-config.properties</filter>
                            </filters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create_kubernetes_config_files</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/config</directory>
                                    <targetPath>deploy/kubernetes</targetPath>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <filters>
                                <filter>${project.basedir}/src/main/kubernetes-config.properties</filter>
                            </filters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create_openshift_config_files</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/config</directory>
                                    <targetPath>deploy/openshift</targetPath>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <filters>
                                <filter>${project.basedir}/src/main/kubernetes-config.properties</filter>
                            </filters>
                        </configuration>
                    </execution>
                      <execution>
                        <id>create_sandbox_config_files</id>
                        <phase>process-resources</phase>
                        <goals>
                          <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                          <outputDirectory>${project.build.directory}</outputDirectory>
                          <resources>
                            <resource>
                              <directory>${project.basedir}/src/main/config/grafana</directory>
                              <targetPath>sandbox/grafana</targetPath>
                              <filtering>true</filtering>
                            </resource>
                          </resources>
                          <filters>
                            <filter>${project.basedir}/src/main/docker-config.properties</filter>
                          </filters>
                        </configuration>
                      </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>eclipse-hono</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <attach>false</attach>
                            <descriptors>
                                <descriptor>src/main/assembly/hono.xml</descriptor>
                            </descriptors>
                            <tarLongFileMode>posix</tarLongFileMode>
                            <finalName>eclipse-hono-deploy-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
