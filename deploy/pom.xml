<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2016, 2019 Contributors to the Eclipse Foundation
   
    See the NOTICE file(s) distributed with this work for additional
    information regarding copyright ownership.
   
    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License 2.0 which is available at
    http://www.eclipse.org/legal/epl-2.0
   
    SPDX-License-Identifier: EPL-2.0
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.eclipse.hono</groupId>
    <artifactId>hono-bom</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <relativePath>../bom</relativePath>
  </parent>

  <artifactId>hono-deploy</artifactId>
  <name>Hono Deployment</name>
  <url>https://www.eclipse.org/hono</url>

  <description>A Helm chart for deploying a Hono instance to a Kubernetes or OpenShift cluster using example configuration properties.</description>

  <properties>
    <docker.skip.build>true</docker.skip.build>
    <default-java-options>-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80</default-java-options>

    <!-- service names -->
    <hono.adapter-amqp.service>hono-adapter-amqp-vertx</hono.adapter-amqp.service>
    <hono.adapter-coap.service>hono-adapter-coap-vertx</hono.adapter-coap.service>
    <hono.adapter-http.service>hono-adapter-http-vertx</hono.adapter-http.service>
    <hono.adapter-kura.service>hono-adapter-kura</hono.adapter-kura.service>
    <hono.adapter-lora.service>ono-adapter-lora</hono.adapter-lora.service>
    <hono.adapter-mqtt.service>hono-adapter-mqtt-vertx</hono.adapter-mqtt.service>
    <hono.amqp-network.service>hono-dispatch-router</hono.amqp-network.service>
    <hono.auth.service>hono-service-auth</hono.auth.service>
    <hono.artemis.service>hono-artemis</hono.artemis.service>
    <hono.registration.service>hono-service-device-registry</hono.registration.service>

  </properties>

  <dependencies>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-legal</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-demo-certs</artifactId>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <!-- Copy legal documents from "legal" module to "target/classes" folder so that we make sure to include
          legal docs in all modules. -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <!-- Execution and configuration for copying certificates from related module to "target/classes" folder
              so that we can include them in the image. -->
            <id>copy_demo_certs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeArtifactIds>
                hono-demo-certs
              </includeArtifactIds>
              <outputDirectory>${project.build.directory}/config</outputDirectory>
              <includes>
                *.pem,
                *.jks,
                *.p12,
                *.properties
              </includes>
              <useSubDirectoryPerArtifact>true</useSubDirectoryPerArtifact>
              <stripClassifier>true</stripClassifier>
              <stripVersion>true</stripVersion>
              <excludeTransitive>true</excludeTransitive>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>create_default_tenants_trust_anchor</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/deploy</directory>
                  <targetPath>deploy</targetPath>
                  <includes>
                    *.json,
                    *.credentials,
                    services.sh
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
              <filters>
                <filter>${project.build.directory}/config/hono-demo-certs-jar/trust-anchor.properties</filter>
                <filter>${project.build.directory}/config/hono-demo-certs-jar/device-certs.properties</filter>
              </filters>
            </configuration>
          </execution>
          <execution>
            <id>create_helm_config_files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/deploy/helm/eclipse-hono</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/config/hono-demo-certs-jar</directory>
                  <targetPath>hono-demo-certs-jar</targetPath>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${project.basedir}/src/main/deploy/helm</directory>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.basedir}/src/main/config</directory>
                  <targetPath>config</targetPath>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.basedir}/src/main/deploy</directory>
                  <targetPath>example</targetPath>
                  <includes>
                    *.json,
                    *.credentials
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
              <filters>
                <filter>${project.basedir}/src/main/kubernetes-config.properties</filter>
                <filter>${project.build.directory}/config/hono-demo-certs-jar/trust-anchor.properties</filter>
                <filter>${project.build.directory}/config/hono-demo-certs-jar/device-certs.properties</filter>
              </filters>
            </configuration>
          </execution>
          <execution>
            <id>create_sandbox_config_files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/sandbox</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/sandbox</directory>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.basedir}/src/main/config/grafana</directory>
                  <targetPath>grafana</targetPath>
                  <filtering>true</filtering>
                </resource>
              </resources>
              <filters>
                <filter>${project.basedir}/src/main/docker-config.properties</filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>create_downloadable_artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>false</attach>
              <descriptors>
                <descriptor>src/main/assembly/chart.xml</descriptor>
              </descriptors>
              <tarLongFileMode>posix</tarLongFileMode>
              <finalName>eclipse-hono-${project.version}</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
