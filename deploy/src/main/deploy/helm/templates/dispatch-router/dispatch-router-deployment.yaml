{{- if .Values.amqpMessagingNetworkExample.enabled -}}
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  {{- $args := dict "dot" . "component" "amqp-messaging-network-router" "name" "dispatch-router" }}
  {{- include "hono.metadata" $args | nindent 2 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "hono.matchLabels" $args | nindent 6 }}
  template:
    metadata:
      {{- include "hono.metadata" $args | nindent 6 }}
    spec:
      containers:
      - command:
        - /sbin/qdrouterd
        - -c
        - /etc/hono/qdrouterd-with-{{ .Values.amqpMessagingNetworkExample.broker.type }}.json
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{ .Values.amqpMessagingNetworkExample.dispatchRouter.imageName | quote }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: amqps
          containerPort: 5671
          protocol: TCP
        - name: amqp
          containerPort: 5672
          protocol: TCP
        - name: internal
          containerPort: 5673
          protocol: TCP
        resources:
          limits:
            memory: "512Mi"
        livenessProbe:
          initialDelaySeconds: 180
          periodSeconds: 9
          tcpSocket:
            port: 5672
          timeoutSeconds: 1
        name: apache-qpid-dispatch-router
        readinessProbe:
          initialDelaySeconds: 10
          periodSeconds: 5
          tcpSocket:
            port: 5672
          timeoutSeconds: 1
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: /etc/hono
          name: config
          readOnly: true
      volumes:
      - name: config
        secret:
          secretName: {{ .Release.Name }}-dispatch-router-conf
{{- end }}
