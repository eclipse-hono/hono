{{- if .Values.deviceConnectionService.enabled }}
{{- $args := dict "dot" . "component" "service-device-connection" "name" "service-device-connection-conf" -}}
apiVersion: v1
kind: Secret
metadata:
  {{- include "hono.metadata" $args | nindent 2 }}
type: Opaque
stringData:
  application.yml: |
    hono:
      app:
        maxInstances: 1
        startupTimeout: 180
      auth:
        host: {{ .Release.Name }}-service-auth
        port: 5671
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
        name: Hono {{ $args.component }}
        validation:
          certPath: /etc/hono/auth-server-cert.pem
      deviceConnection:
        amqp:
          bindAddress: 0.0.0.0
          keyPath: /etc/hono/key.pem
          certPath: /etc/hono/cert.pem
        remote:
        {{- if .Values.deviceConnectionService.remoteSpec }}
          {{ .Values.deviceConnectionService.remoteSpec | toYaml | indent 10 }}
        {{- else }}
          {{- if .Values.dataGridDeployExample }}
          {{- $serverName := printf "%s-data-grid" .Release.Name }}
          serverList: {{ printf "%s:11222" $serverName }}
          authServerName: {{ $serverName }}
          authUsername: hono
          authPassword: hono-secret
          maxRetries: 100
          {{- else }}
            {{- required "A .Values.deviceConnectionService.remoteSpec needs to be set when deploying the (production) Device Connection service" .Values.deviceConnectionService.remoteSpec }}
          {{- end }}
        {{- end }}
      {{- include "hono.healthServerConfig" nil | nindent 6 }}
data:
  key.pem: {{ .Files.Get "hono-demo-certs-jar/device-connection-key.pem" | b64enc }}
  cert.pem: {{ .Files.Get "hono-demo-certs-jar/device-connection-cert.pem" | b64enc }}
  trusted-certs.pem: {{ .Files.Get "hono-demo-certs-jar/trusted-certs.pem" | b64enc }}
  auth-server-cert.pem: {{ .Files.Get "hono-demo-certs-jar/auth-server-cert.pem" | b64enc }}
{{- end }}
