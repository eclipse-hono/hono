{{- if .Values.deviceConnectionService.enabled }}
#
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
{{- $args := dict "dot" . "component" "service-device-connection" "name" "service-device-connection-conf" }}
apiVersion: v1
kind: Secret
metadata:
  {{- include "hono.metadata" $args | nindent 2 }}
type: Opaque
stringData:
  application.yml: |
    hono:
      app:
        maxInstances: {{ .Values.deviceConnectionService.hono.app.maxInstances }}
        startupTimeout: {{ .Values.deviceConnectionService.hono.app.startupTimeout }}
      auth:
        {{- if .Values.deviceConnectionService.hono.auth }}
        {{- .Values.deviceConnectionService.hono.auth | toYaml | nindent 8 }}
        {{- else }}
        host: {{ printf "%s-service-auth" .Release.Name | quote }}
        port: 5671
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
        name: {{ printf "Hono %s" $args.component | quote }}
        validation:
          certPath: "/etc/hono/auth-server-cert.pem"
        {{- end }}
      deviceConnection:
        amqp:
          {{- if .Values.deviceConnectionService.hono.deviceConnection.amqp }}
          {{- .Values.deviceConnectionService.hono.deviceConnection.amqp | toYaml | nindent 10 }}
          {{- else }}
          bindAddress: "0.0.0.0"
          keyPath: "/etc/hono/key.pem"
          certPath: "/etc/hono/cert.pem"
          {{- end }}
        remote:
        {{- if .Values.deviceConnectionService.hono.deviceConnection.remote }}
          {{ .Values.deviceConnectionService.hono.deviceConnection.remote | toYaml | indent 10 }}
        {{- else }}
          {{- if .Values.dataGridExample.enabled }}
          {{- $serverName := printf "%s-data-grid" .Release.Name }}
          serverList: {{ printf "%s:11222" $serverName | quote }}
          authServerName: {{ $serverName | quote }}
          authUsername: "hono"
          authPassword: "hono-secret"
          maxRetries: 100
          {{- else }}
            {{- required "A .Values.deviceConnectionService.hono.deviceConnection.remote needs to be set when deploying the (production) Device Connection service" .Values.deviceConnectionService.hono.deviceConnection.remote }}
          {{- end }}
        {{- end }}
      {{- include "hono.healthServerConfig" .Values.deviceConnectionService.hono.healthCheck | nindent 6 }}
{{- if not .Values.deviceConnectionService.extraSecretMounts }}
data:
  key.pem: {{ .Files.Get "hono-demo-certs-jar/device-connection-key.pem" | b64enc }}
  cert.pem: {{ .Files.Get "hono-demo-certs-jar/device-connection-cert.pem" | b64enc }}
  trusted-certs.pem: {{ .Files.Get "hono-demo-certs-jar/trusted-certs.pem" | b64enc }}
  auth-server-cert.pem: {{ .Files.Get "hono-demo-certs-jar/auth-server-cert.pem" | b64enc }}
{{- end }}
{{- end }}
