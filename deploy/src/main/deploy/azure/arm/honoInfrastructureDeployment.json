{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "aks": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "AKS deployment enabled."
            }
        },
        "aksClusterName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional AKS cluster name. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional virtual network name. Otherwise calculated from uniqueSolutionPrefix."
            }
        },

        "aksSubnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional subnet name for AKS nodes and pods. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "mqttDnsLabelPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional DNS Label for the Public IP that will be used by hono's MQTT adapter. Otherwise calculated from uniqueSolutionPrefix. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
            }
        },
        "httpDnsLabelPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional DNS Label for the Public IP that will be used by hono's HTTP adapter. Otherwise calculated from uniqueSolutionPrefix. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
            }
        },
        "amqpDnsLabelPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional DNS Label for the Public IP that will be used by hono's AMQP adapter. Otherwise calculated from uniqueSolutionPrefix. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
            }
        },
        "networkDnsLabelPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional DNS Label for the Public IP that will be used by hono's AMQP network. Otherwise calculated from uniqueSolutionPrefix. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
            }
        },
        "registryDnsLabelPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional DNS Label for the Public IP that will be used by hono's device registry. Otherwise calculated from uniqueSolutionPrefix. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
            }
        },
        "mqttPublicIPAddressName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional IP address name that will be used by hono's MQTT adapter. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "amqpPublicIPAddressName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional IP address name that will be used by hono's AMQP adapter. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "networkPublicIPAddressName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional IP address name that will be used by hono's AMQP network. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "httpPublicIPAddressName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional IP address name that will be used by hono's HTTP adapter. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "registryPublicIPAddressName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional IP address name that will be used by hono's device registry. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "uniqueSolutionPrefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix used for resource names. Should be unique as this will also be used for domain names."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "servicePrincipalObjectId": {
            "type": "securestring",
            "metadata": {
                "description": "Object ID against which the Network Contributor roles will be assigned on the subnet"
            }
        },
        "servicePrincipalClientId": {
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            },
            "type": "securestring"
        },
        "servicePrincipalClientSecret": {
            "metadata": {
                "description": "The Service Principal Client Secret."
            },
            "type": "securestring"
        },
        "serviceBus": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Service Bus deployment enabled."
            }
        },
        "namespaceName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional Service Bus namespace name. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "serviceBusSku": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ],
            "defaultValue": "Premium",
            "metadata": {
                "description": "The messaging tier for service Bus namespace. Premium by default to support service endpoint."
            }
        }

    },
    "variables": {
        "namespaceName": "[if(empty(parameters('namespaceName')),concat(parameters('uniqueSolutionPrefix'),'honons'),parameters('namespaceName'))]",
        "mqttDnsLabelPrefix": "[if(empty(parameters('mqttDnsLabelPrefix')),concat(parameters('uniqueSolutionPrefix'),'-hono-mqtt'),parameters('mqttDnsLabelPrefix'))]",
        "httpDnsLabelPrefix": "[if(empty(parameters('httpDnsLabelPrefix')),concat(parameters('uniqueSolutionPrefix'),'-hono-http'),parameters('httpDnsLabelPrefix'))]",
        "amqpDnsLabelPrefix": "[if(empty(parameters('amqpDnsLabelPrefix')),concat(parameters('uniqueSolutionPrefix'),'-hono-amqp'),parameters('amqpDnsLabelPrefix'))]",
        "registryDnsLabelPrefix": "[if(empty(parameters('registryDnsLabelPrefix')),concat(parameters('uniqueSolutionPrefix'),'-hono-registry'),parameters('registryDnsLabelPrefix'))]",
        "networkDnsLabelPrefix": "[if(empty(parameters('networkDnsLabelPrefix')),concat(parameters('uniqueSolutionPrefix'),'-hono-network'),parameters('networkDnsLabelPrefix'))]",
        "mqttPulicIPAddressName": "[if(empty(parameters('mqttPublicIPAddressName')),concat(parameters('uniqueSolutionPrefix'),'honomqttpip'),parameters('mqttPublicIPAddressName'))]",
        "httpPulicIPAddressName": "[if(empty(parameters('httpPublicIPAddressName')),concat(parameters('uniqueSolutionPrefix'),'honohttppip'),parameters('httpPublicIPAddressName'))]",
        "amqpPulicIPAddressName": "[if(empty(parameters('amqpPublicIPAddressName')),concat(parameters('uniqueSolutionPrefix'),'honoamqppip'),parameters('amqpPublicIPAddressName'))]",
        "registryPublicIPAddressName": "[if(empty(parameters('registryPublicIPAddressName')),concat(parameters('uniqueSolutionPrefix'),'honoregistrypip'),parameters('registryPublicIPAddressName'))]",
        "networkPublicIPAddressName": "[if(empty(parameters('networkPublicIPAddressName')),concat(parameters('uniqueSolutionPrefix'),'hononetworkpip'),parameters('networkPublicIPAddressName'))]",
        "aksClusterName": "[if(empty(parameters('aksClusterName')),concat(parameters('uniqueSolutionPrefix'), 'honoaks'),parameters('aksClusterName'))]",
        "vnetName": "[if(empty(parameters('vnetName')),concat(parameters('uniqueSolutionPrefix'), 'honovnet'),parameters('vnetName'))]",
        "aksSubnetName": "[if(empty(parameters('aksSubnetName')),concat(parameters('uniqueSolutionPrefix'), 'honoakssubnet'),parameters('aksSubnetName'))]"
    },
    "resources": [{
            "condition": "[parameters('aks')]",
            "name": "honoKubernetesDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'honoVnetDeployment')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/eclipse/hono/master/deploy/src/main/deploy/azure/arm/templates/kubernetesDeploy.json"
                },
                "parameters": {
                    "clusterName": {
                        "value": "[variables('aksClusterName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('uniqueSolutionPrefix')]"
                    },
                    "servicePrincipalObjectId": {
                        "value": "[parameters('servicePrincipalObjectId')]"
                    },
                    "servicePrincipalClientId": {
                        "value": "[parameters('servicePrincipalClientId')]"
                    },
                    "servicePrincipalClientSecret": {
                        "value": "[parameters('servicePrincipalClientSecret')]"
                    },
                    "virtualNetworkName": {
                        "value": "[variables('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[variables('aksSubnetName')]"
                    },
                    "virtualNetworkResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "mqttPublicIPAddressName": {
                        "value": "[variables('mqttPulicIPAddressName')]"
                    },
                    "httpPublicIPAddressName": {
                        "value": "[variables('httpPulicIPAddressName')]"
                    },
                    "amqpPublicIPAddressName": {
                        "value": "[variables('amqpPulicIPAddressName')]"
                    },
                    "registryPublicIPAddressName": {
                        "value": "[variables('registryPublicIPAddressName')]"
                    },
                    "networkPublicIPAddressName": {
                        "value": "[variables('networkPublicIPAddressName')]"
                    },
                    "mqttDnsLabelPrefix": {
                        "value": "[variables('mqttDnsLabelPrefix')]"
                    },
                    "httpDnsLabelPrefix": {
                        "value": "[variables('httpDnsLabelPrefix')]"
                    },
                    "amqpDnsLabelPrefix": {
                        "value": "[variables('amqpDnsLabelPrefix')]"
                    },
                    "registryDnsLabelPrefix": {
                        "value": "[variables('registryDnsLabelPrefix')]"
                    },
                    "networkDnsLabelPrefix": {
                        "value": "[variables('networkDnsLabelPrefix')]"
                    }
                }
            }
        }, {
            "condition": "[parameters('serviceBus')]",
            "name": "honoServiceBusDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'honoVnetDeployment')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/eclipse/hono/master/deploy/src/main/deploy/azure/arm/templates/serviceBusDeploy.json"
                },
                "parameters": {
                    "serviceBusNamespaceName": {
                        "value": "[variables('namespaceName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "serviceBusSku": {
                        "value": "[parameters('serviceBusSku')]"
                    },
                    "virtualNetworkName": {
                        "value": "[variables('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[variables('aksSubnetName')]"
                    },
                    "virtualNetworkResourceGroup": {
                        "value": "[resourceGroup().name]"
                    }
                }
            }
        },
        {
            "name": "honoVnetDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/eclipse/hono/master/deploy/src/main/deploy/azure/arm/templates/vnetDeploy.json"
                },
                "parameters": {
                    "vnetName": {
                        "value": "[variables('vnetName')]"
                    },
                    "aksSubnetName": {
                        "value": "[variables('aksSubnetName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "aksClusterName": {
            "type": "string",
            "value": "[variables('aksClusterName')]"
        },
        "vnetName": {
            "type": "string",
            "value": "[variables('vnetName')]"
        },
        "mqttPublicIPAddress": {
            "type": "string",
            "value": "[reference('honoKubernetesDeployment').outputs.mqttIpAddress.value]"
        },
        "mqttPublicIPFQDN": {
            "type": "string",
            "value": "[reference('honoKubernetesDeployment').outputs.mqttIpFQDN.value]"
        },
        "httpPublicIPAddress": {
            "type": "string",
            "value": "[reference('honoKubernetesDeployment').outputs.httpIpAddress.value]"
        },
        "httpPublicIPFQDN": {
            "type": "string",
            "value": "[reference('honoKubernetesDeployment').outputs.httpIpFQDN.value]"
        },
        "amqpPublicIPAddress": {
            "type": "string",
            "value": "[reference('honoKubernetesDeployment').outputs.amqpIpAddress.value]"
        },
        "amqpPublicIPFQDN": {
            "type": "string",
            "value": "[reference('honoKubernetesDeployment').outputs.amqpIpFQDN.value]"
        },
        "registryPublicIPAddress": {
            "type": "string",
            "value": "[reference('honoKubernetesDeployment').outputs.registryIpAddress.value]"
        },
        "registryPublicIPFQDN": {
            "type": "string",
            "value": "[reference('honoKubernetesDeployment').outputs.registryIpFQDN.value]"
        },
        "networkPublicIPAddress": {
            "type": "string",
            "value": "[reference('honoKubernetesDeployment').outputs.networkIpAddress.value]"
        },
        "networkPublicIPFQDN": {
            "type": "string",
            "value": "[reference('honoKubernetesDeployment').outputs.networkIpFQDN.value]"
        },
        "serviceBusKey": {
            "type": "string",
            "value": "[reference('honoServiceBusDeployment').outputs.DefaultSharedAccessPolicyPrimaryKey.value]"
        },
        "serviceBusKeyName": {
            "type": "string",
            "value": "[reference('honoServiceBusDeployment').outputs.DefaultSharedAccessPolicyKeyName.value]"
        },
        "serviceBusNamespaceName": {
            "type": "string",
            "value": "[variables('namespaceName')]"
        }

    }
}
