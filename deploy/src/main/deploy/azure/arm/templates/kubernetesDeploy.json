{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.14.5",
      "metadata": {
        "description": "Kubernetes version."
      }
    },
    "clusterName": {
      "type": "string",
      "defaultValue": "Honoakscluster",
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the Managed Cluster resource."
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      }
    },
    "mqttDnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Label for the Public IP of hono's MQTT adapter. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "httpDnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Label for the Public IP of hono's HTTP adapter. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "amqpDnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Label for the Public IP of hono's AMQP adapter. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "registryDnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Label for the Public IP of hono's device registry. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "networkDnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Label for the Public IP of hono's AMQP network. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of nodes for the cluster."
      },
      "minValue": 1,
      "maxValue": 50
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "servicePrincipalObjectId": {
      "type": "securestring",
      "metadata": {
        "description": "Object ID against which the Network Contributor roles will be assigned on the subnet"
      }
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "Client ID (used by cloudprovider)"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "osType": {
      "type": "string",
      "defaultValue": "Linux",
      "allowedValues": ["Linux"],
      "metadata": {
        "description": "The type of operating system."
      }
    },
    "enableHttpApplicationRouting": {
      "defaultValue": false,
      "type": "bool",
      "metadata": {
        "description": "boolean flag to turn on and off of http application routing"
      }
    },
    "networkPlugin": {
      "allowedValues": [
        "azure",
        "kubenet"
      ],
      "defaultValue": "azure",
      "type": "string",
      "metadata": {
        "description": "Network plugin used for building Kubernetes network."
      }
    },
    "networkPolicy": {
      "allowedValues": [
        "azure",
        "calico"
      ],
      "defaultValue": "azure",
      "type": "string",
      "metadata": {
        "description": "Network policy option."
      }
    },
    "maxPods": {
      "defaultValue": 30,
      "type": "int",
      "metadata": {
        "description": "Maximum number of pods that can run on a node."
      }
    },
    "enableRBAC": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "boolean flag to turn on and off of RBAC"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of an existing VNET that will contain this AKS deployment."
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet name that will contain the AKS nodes."
      }
    },
    "mqttPublicIPAddressName": {
      "type": "string",
      "defaultValue": "honomqtt",
      "metadata": {
        "description": "Public IP address name that will be used by hono's MQTT adapter."
      }
    },
    "httpPublicIPAddressName": {
      "type": "string",
      "defaultValue": "honohttp",
      "metadata": {
        "description": "Public IP address name that will be used by hono's HTTP adapter."
      }
    },
    "amqpPublicIPAddressName": {
      "type": "string",
      "defaultValue": "honoamqp",
      "metadata": {
        "description": "Public IP address name that will be used by hono's AMQP adapter."
      }
    },
    "registryPublicIPAddressName": {
      "type": "string",
      "defaultValue": "honoregistry",
      "metadata": {
        "description": "Public IP address name that will be used by hono's device registry."
      }
    },
    "networkPublicIPAddressName": {
      "type": "string",
      "defaultValue": "honoregistry",
      "metadata": {
        "description": "Public IP address name that will be used by hono's AMQP network."
      }
    },
    "serviceCidr": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "A CIDR notation IP range from which to assign service cluster IPs."
      }
    },
    "dnsServiceIP": {
      "type": "string",
      "defaultValue": "10.0.0.10",
      "metadata": {
        "description": "Containers DNS server IP address."
      }
    },
    "dockerBridgeCidr": {
      "type": "string",
      "defaultValue": "172.17.0.1/16",
      "metadata": {
        "description": "A CIDR notation IP for Docker bridge."
      }
    }
  },
  "variables": {
    "mqttPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('mqttPublicIPAddressName'))]",
    "httpPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('httpPublicIPAddressName'))]",
    "amqpPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('amqpPublicIPAddressName'))]",
    "registryPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('registryPublicIPAddressName'))]",
    "networkPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('networkPublicIPAddressName'))]",
    "vnetSubnetId": "[resourceId(parameters('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks/subnets',parameters('virtualNetworkName'),parameters('subnetName'))]"
  },
  "resources": [{
      "apiVersion": "2019-06-01",
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[parameters('location')]",
      "name": "[parameters('clusterName')]",
      "tags": {},
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'ClusterResourceGroupRoleAssignmentDeployment')]",
        "[variables('mqttPublicIPRef')]",
        "[variables('httpPublicIPRef')]",
        "[variables('amqpPublicIPRef')]",
        "[variables('registryPublicIPRef')]",
        "[variables('networkPublicIPRef')]"
      ],
      "properties": {
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "enableRBAC": "[parameters('enableRBAC')]",
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "addonProfiles": {
          "httpApplicationRouting": {
            "enabled": "[parameters('enableHttpApplicationRouting')]"
          }
        },
        "agentPoolProfiles": [{
          "name": "agentpool",
          "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
          "count": "[parameters('agentCount')]",
          "vmSize": "[parameters('agentVMSize')]",
          "osType": "[parameters('osType')]",
          "storageProfile": "ManagedDisks",
          "vnetSubnetID": "[variables('vnetSubnetID')]",
          "maxPods": "[parameters('maxPods')]"
        }],
        "servicePrincipalProfile": {
          "clientId": "[parameters('servicePrincipalClientId')]",
          "Secret": "[parameters('servicePrincipalClientSecret')]"
        },
        "networkProfile": {
          "networkPlugin": "[parameters('networkPlugin')]",
          "networkPolicy": "[parameters('networkPolicy')]",
          "serviceCidr": "[parameters('serviceCidr')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "ClusterResourceGroupRoleAssignmentDeployment",
      "apiVersion": "2017-05-10",
      "subscriptionId": "[subscription().subscriptionId]",
      "resourceGroup": "[parameters('virtualNetworkResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [{
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2017-05-01",
            "name": "[guid(resourceGroup().id, deployment().name)]",
            "properties": {
              "scope": "[resourceGroup().id]",
              "principalId": "[parameters('servicePrincipalObjectId')]",
              "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]"
            }
          }]
        }
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('mqttPublicIPAddressName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'ClusterResourceGroupRoleAssignmentDeployment')]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('mqttDnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('amqpPublicIPAddressName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'ClusterResourceGroupRoleAssignmentDeployment')]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('amqpDnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('httpPublicIPAddressName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'ClusterResourceGroupRoleAssignmentDeployment')]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('httpDnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('registryPublicIPAddressName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'ClusterResourceGroupRoleAssignmentDeployment')]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('registryDnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('networkPublicIPAddressName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'ClusterResourceGroupRoleAssignmentDeployment')]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('networkDnsLabelPrefix')]"
        }
      }
    }
  ],
  "outputs": {
    "controlPlaneFQDN": {
      "type": "string",
      "value": "[reference(parameters('clusterName')).fqdn]"
    },
    "mqttIpAddress": {
      "value": "[reference(variables('mqttPublicIPRef'), '2017-11-01').ipAddress]",
      "type": "string"
    },
    "mqttIpFQDN": {
      "value": "[reference(variables('mqttPublicIPRef'), '2017-11-01').dnsSettings.fqdn]",
      "type": "string"
    },
    "httpIpAddress": {
      "value": "[reference(variables('httpPublicIPRef'), '2017-11-01').ipAddress]",
      "type": "string"
    },
    "httpIpFQDN": {
      "value": "[reference(variables('httpPublicIPRef'), '2017-11-01').dnsSettings.fqdn]",
      "type": "string"
    },
    "amqpIpAddress": {
      "value": "[reference(variables('amqpPublicIPRef'), '2017-11-01').ipAddress]",
      "type": "string"
    },
    "amqpIpFQDN": {
      "value": "[reference(variables('amqpPublicIPRef'), '2017-11-01').dnsSettings.fqdn]",
      "type": "string"
    },
    "registryIpAddress": {
      "value": "[reference(variables('registryPublicIPRef'), '2017-11-01').ipAddress]",
      "type": "string"
    },
    "registryIpFQDN": {
      "value": "[reference(variables('registryPublicIPRef'), '2017-11-01').dnsSettings.fqdn]",
      "type": "string"
    },
    "networkIpAddress": {
      "value": "[reference(variables('networkPublicIPRef'), '2017-11-01').ipAddress]",
      "type": "string"
    },
    "networkIpFQDN": {
      "value": "[reference(variables('networkPublicIPRef'), '2017-11-01').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
