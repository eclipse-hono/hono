<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2020, 2021 Contributors to the Eclipse Foundation
   
    See the NOTICE file(s) distributed with this work for additional
    information regarding copyright ownership.
   
    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License 2.0 which is available at
    http://www.eclipse.org/legal/epl-2.0
   
    SPDX-License-Identifier: EPL-2.0
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>org.eclipse.hono</groupId>
    <artifactId>hono-services-spring</artifactId>
    <version>1.10.0-SNAPSHOT</version>
    <relativePath>../base-spring</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>hono-service-device-registry-jdbc</artifactId>
  <name>Hono JDBC Based Device Registry</name>
  <description>A JDBC based device registry for Hono implementing the Device Registration and Credentials APIs.</description>
  <url>https://www.eclipse.org/hono</url>

  <dependencies>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-service-device-registry-base</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-service-base-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-client-telemetry-amqp</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-client-telemetry-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-jdbc-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-auth-jdbc</artifactId>
    </dependency>

    <!-- JDBC drivers -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- testing -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-service-device-registry-base</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
    </dependency>
    <!--
      use BC for creating self-signed certs instead of sun.security.x509
      which has been removed in OpenJDK 15
    -->
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <org.eclipse.hono.service.base.jdbc.store.skipDumpingStatementConfiguration>true</org.eclipse.hono.service.base.jdbc.store.skipDumpingStatementConfiguration>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>postgresql-tests</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skipTests>${skipDockerTests}</skipTests>
              <systemPropertyVariables>
                <AbstractJdbcRegistryTest.databaseType>postgresql</AbstractJdbcRegistryTest.databaseType>
                <AbstractJdbcRegistryTest.postgresqlImageName>${postgresql-image.name}</AbstractJdbcRegistryTest.postgresqlImageName>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>build-docker-image</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <build>
                    <labels>
                      <implemented.api.1>Tenant</implemented.api.1>
                      <implemented.api.2>Device Registration</implemented.api.2>
                      <implemented.api.3>Credentials</implemented.api.3>
                    </labels>
                    <ports>
                      <port>5671</port>
                      <port>5672</port>
                      <port>8080</port>
                      <port>8443</port>
                      <port>${vertx.health.port}</port>
                    </ports>
                    <env>
                      <SPRING_PROFILES_ACTIVE>registry-adapter,registry-management,tenant-service</SPRING_PROFILES_ACTIVE>
                      <JAVA_MAIN_CLASS>org.eclipse.hono.deviceregistry.jdbc.Application</JAVA_MAIN_CLASS>
                    </env>
                  </build>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>jaeger</id>
      <dependencies>
        <dependency>
          <groupId>io.jaegertracing</groupId>
          <artifactId>jaeger-client</artifactId>
        </dependency>
        <dependency>
          <groupId>io.jaegertracing</groupId>
          <artifactId>jaeger-micrometer</artifactId>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

</project>
