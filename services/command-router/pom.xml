<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.eclipse.hono</groupId>
    <artifactId>hono-services</artifactId>
    <version>1.5.0-SNAPSHOT</version>
  </parent>
  <artifactId>hono-service-command-router</artifactId>
  <name>Hono Command Router</name>
  <description>An implementation of Hono's Command Router API that is using Infinispan for storing data.</description>
  <inceptionYear>2020</inceptionYear>

  <dependencies>
    <dependency>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-client-hotrod</artifactId>
      <exclusions>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-handler</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>client-device-connection-infinispan</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-client-adapter-amqp</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>build-docker-image</id>
      <activation>
        <property>
          <name>docker.host</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <build>
                    <from>${java-base-image.name}</from>
                    <labels>
                      <implemented.api.1>Command Router</implemented.api.1>
                    </labels>
                    <ports>
                      <port>5671</port>
                      <port>5672</port>
                      <port>${vertx.health.port}</port>
                    </ports>
                    <cmd>
                      <exec>
                        <arg>java</arg>
                        <arg>--illegal-access=permit</arg>
                        <arg>-Dvertx.cacheDirBase=/tmp</arg>
                        <arg>-Dloader.home=/opt/hono</arg>
                        <arg>-Dloader.path=extensions</arg>
                        <arg>-Dorg.jboss.logging.provider=slf4j</arg>
                        <arg>-cp</arg>
                        <arg>/opt/hono/${project.artifactId}-${project.version}-${classifier.spring.boot.artifact}.jar</arg>
                        <arg>org.springframework.boot.loader.PropertiesLauncher</arg>
                      </exec>
                    </cmd>
                    <assembly>
                      <mode>dir</mode>
                      <basedir>/</basedir>
                      <inline>
                        <fileSets>
                          <fileSet>
                            <directory>${project.build.directory}</directory>
                            <outputDirectory>opt/hono</outputDirectory>
                            <includes>
                              <include>${project.artifactId}-${project.version}-${classifier.spring.boot.artifact}.jar</include>
                            </includes>
                          </fileSet>
                        </fileSets>
                      </inline>
                    </assembly>
                  </build>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>jaeger</id>
      <dependencies>
        <dependency>
          <groupId>io.jaegertracing</groupId>
          <artifactId>jaeger-client</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>docker-push-image</id>
      <build>
          <plugins>
              <plugin>
                  <groupId>io.fabric8</groupId>
                  <artifactId>docker-maven-plugin</artifactId>
                  <executions>
                      <execution>
                          <id>docker-push-image</id>
                          <phase>install</phase>
                          <goals>
                              <goal>push</goal>
                          </goals>
                      </execution>
                  </executions>
              </plugin>
          </plugins>
      </build>
    </profile>
  </profiles>

</project>
