<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2016 Bosch Software Innovations GmbH.

    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
       Bosch Software Innovations GmbH - initial API and implementation and initial documentation

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.eclipse.hono</groupId>
    <artifactId>hono-bom</artifactId>
    <version>0.5-M9-SNAPSHOT</version>
    <relativePath>../bom</relativePath>
  </parent>

  <artifactId>hono-example</artifactId>

  <name>Hono Examples</name>
  <description>A collection of example code for sending and receiving telemetry data using HonoClient.
Also contains scripts for deploying a Hono instance to a Docker Swarm, a Kubernetes or an Openshift cluster using example configuration properties.</description>

  <properties>
    <docker.skip.build>true</docker.skip.build>
    <hono.messaging.host>hono-service-messaging.hono</hono.messaging.host>
    <hono.registration.host>hono-service-device-registry.hono</hono.registration.host>
    <hono.auth.host>hono-service-auth.hono</hono.auth.host>
    <!-- 
      The shared secret to use for creating/validating registration assertions.
     -->
    <hono.regAssertion.sharedSecret>g#aWO!BUm7aj*#%X*VGXKFhxkhNrMNj0</hono.regAssertion.sharedSecret>
    <hono.auth.validation.certPath>/run/secrets/auth-server-cert.pem</hono.auth.validation.certPath>
    <hono.adapter.mqtt.username>mqtt-adapter@HONO</hono.adapter.mqtt.username>
    <hono.adapter.mqtt.password>mqtt-secret</hono.adapter.mqtt.password>
    <hono.adapter.rest.username>rest-adapter@HONO</hono.adapter.rest.username>
    <hono.adapter.rest.password>rest-secret</hono.adapter.rest.password>
    <hono.trustStore.path>/run/secrets/trusted-certs.pem</hono.trustStore.path>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
    	<groupId>org.eclipse.hono</groupId>
    	<artifactId>hono-legal</artifactId>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-demo-certs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-artemis</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-dispatch-router</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-metrics</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-service-auth</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-service-device-registry</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-service-messaging</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-adapter-mqtt-vertx</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-adapter-rest-vertx</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>${project.basedir}/src/main/deploy</directory>
        <targetPath>${project.build.directory}/deploy</targetPath>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>${project.basedir}/src/main/config</directory>
        <targetPath>${project.build.directory}/config</targetPath>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <!-- 
          Copy legal documents from "legal" module to "target/classes" folder
          so that we make sure to include legal docs in all modules.
         -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <!--
              Execution and configuration for copying certificates from related module
              to "target/classes" folder so that we can include them in the image.
             -->
            <id>copy_demo_certs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeArtifactIds>
                hono-demo-certs,
                hono-dispatch-router,
                hono-service-auth,
                hono-service-messaging,
                hono-service-device-registry,
                hono-adapter-rest-vertx,
                hono-adapter-mqtt-vertx,
                hono-metrics,
                hono-artemis
              </includeArtifactIds>
              <outputDirectory>${project.build.directory}/config</outputDirectory>
              <includes>
                *.pem,
                qpid/*,
                sasl/*,
                META-INF/fabric8/**/*.yml
              </includes>
              <useSubDirectoryPerArtifact>true</useSubDirectoryPerArtifact>
              <stripClassifier>true</stripClassifier>
              <stripVersion>true</stripVersion>
              <excludeTransitive>true</excludeTransitive>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>eclipse-hono</id>
            <phase>package</phase>
            <goals>
                <goal>single</goal>
            </goals>
            <configuration>
              <attach>false</attach>
              <descriptors>
                <descriptor>src/main/assembly/hono.xml</descriptor>
              </descriptors>
              <tarLongFileMode>posix</tarLongFileMode>
              <finalName>eclipse-hono-example-${project.version}</finalName>
              <appendAssemblyId>false</appendAssemblyId>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
