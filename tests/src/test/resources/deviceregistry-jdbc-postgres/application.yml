hono:

  app:
    maxInstances: 1
    startupTimeout: 90

  healthCheck:
    insecurePortBindAddress: 0.0.0.0
    insecurePort: ${vertx.health.port}

  messaging:
    name: 'Hono Device Registry JDBC'
    host: ${hono.amqp-network.host}
    port: 5673
    amqpHostname: hono-internal
    keyPath: /etc/hono/certs/device-registry-key.pem
    certPath: /etc/hono/certs/device-registry-cert.pem
    trustStorePath: /etc/hono/certs/trusted-certs.pem
    linkEstablishmentTimeout: ${link.establishment.timeout}
    flowLatency: ${flow.latency}
    requestTimeout: ${request.timeout}

  auth:
    host: ${hono.auth.host}
    port: 5671
    name: device-registry
    trustStorePath: "/etc/hono/certs/trusted-certs.pem"
    validation:
      certPath: /etc/hono/certs/auth-server-cert.pem

  registry:
    amqp:
      insecurePortEnabled: true
      insecurePortBindAddress: 0.0.0.0
    http:
      authenticationRequired: false
      insecurePortEnabled: true
      insecurePortBindAddress: 0.0.0.0
    jdbc:
      adapter:
        url: ${hono.jdbc.db.url}
        driverClass: org.postgresql.Driver
        username: ${hono.jdbc.db.registry.username}
        password: ${hono.jdbc.db.registry.password}
      management:
        url: ${hono.jdbc.db.url}
        driverClass: org.postgresql.Driver
        username: ${hono.jdbc.db.registry.username}
        password: ${hono.jdbc.db.registry.password}
    svc:
      maxBcryptCostFactor: ${max.bcrypt.costFactor}

  tenant:
    jdbc:
      adapter:
        url: ${hono.jdbc.db.url}
        driverClass: org.postgresql.Driver
        username: ${hono.jdbc.db.registry.username}
        password: ${hono.jdbc.db.registry.password}
      management:
        url: ${hono.jdbc.db.url}
        driverClass: org.postgresql.Driver
        username: ${hono.jdbc.db.registry.username}
        password: ${hono.jdbc.db.registry.password}
    svc:

  vertx:
    maxEventLoopExecuteTime: ${max.event-loop.execute-time}
    preferNative: true
  kafka:
    commonClientConfig:
      bootstrap.servers: ${hono.kafka.bootstrap.servers}

spring:
  jmx:
    enabled: false

management:
  port: -1

server:
  port: -1
