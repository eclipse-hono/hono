hono:
  app:
    maxInstances: 1
  connectionEvents:
    producer: none
  healthCheck:
    insecurePortBindAddress: 0.0.0.0
    insecurePort: ${vertx.health.port}
  http:
    bindAddress: 0.0.0.0
    insecurePortBindAddress: 0.0.0.0
    insecurePortEnabled: true
    nativeTlsRequired: ${hono.http-adapter.nativeTlsRequired}
    keyPath: /etc/hono/certs/http-adapter-key.pem
    certPath: /etc/hono/certs/http-adapter-cert.pem
    maxPayloadSize: 2048
  messaging:
    name: 'Hono HTTP Adapter'
    host: ${hono.amqp-network.host}
    port: 5673
    amqpHostname: hono-internal
    keyPath: /etc/hono/certs/http-adapter-key.pem
    certPath: /etc/hono/certs/http-adapter-cert.pem
    trustStorePath: /etc/hono/certs/trustStore.jks
    trustStorePassword: "file:/etc/hono/certs/trust-store-password"
    linkEstablishmentTimeout: ${link.establishment.timeout}
    flowLatency: ${flow.latency}
    requestTimeout: ${request.timeout}
  registration:
    name: 'Hono HTTP Adapter'
    host: ${hono.registration.host}
    port: 5672
    username: http-adapter@HONO
    password: http-secret
    linkEstablishmentTimeout: ${link.establishment.timeout}
    flowLatency: ${flow.latency}
    requestTimeout: ${request.timeout}
  credentials:
    name: 'Hono HTTP Adapter'
    host: ${hono.registration.host}
    port: 5672
    username: http-adapter@HONO
    password: http-secret
    linkEstablishmentTimeout: ${link.establishment.timeout}
    flowLatency: ${flow.latency}
    requestTimeout: ${request.timeout}
  tenant:
    name: 'Hono HTTP Adapter'
    host: ${hono.registration.host}
    port: 5672
    username: http-adapter@HONO
    password: http-secret
    linkEstablishmentTimeout: ${link.establishment.timeout}
    flowLatency: ${flow.latency}
    requestTimeout: ${request.timeout}
  commandRouter:
    name: 'Hono HTTP Adapter'
    host: ${hono.commandrouter.host}
    port: 5672
    username: http-adapter@HONO
    password: http-secret
    linkEstablishmentTimeout: ${link.establishment.timeout}
    flowLatency: ${flow.latency}
    requestTimeout: ${request.timeout}
  command:
    name: 'Hono HTTP Adapter'
    host: ${hono.amqp-network.host}
    port: 5673
    amqpHostname: hono-internal
    keyPath: /etc/hono/certs/http-adapter-key.pem
    certPath: /etc/hono/certs/http-adapter-cert.pem
    trustStorePath: /etc/hono/certs/trustStore.jks
    trustStorePassword: "file:/etc/hono/certs/trust-store-password"
    linkEstablishmentTimeout: ${link.establishment.timeout}
    flowLatency: ${flow.latency}
    requestTimeout: ${request.timeout}
  vertx:
    maxEventLoopExecuteTime: ${max.event-loop.execute-time}
    preferNative: true
  kafka:
    commonClientConfig:
      bootstrap.servers: ${hono.kafka.bootstrap.servers}

quarkus:
  jaeger:
    service-name: "${hono.http-adapter.host}"
  log:
    console:
      color: true
    level: INFO
    min-level: TRACE
    category:
      "io.quarkus.jaeger":
        level: DEBUG
      "io.quarkus.vertx.core.runtime":
        level: DEBUG
  vertx:
    max-event-loop-execute-time: ${max.event-loop.execute-time}

spring:
  jmx:
    enabled: false

management:
  port: -1

server:
  port: -1
