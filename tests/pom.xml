<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2016 Bosch Software Innovations GmbH.

    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
    Bosch Software Innovations GmbH - initial creation
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <parent>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-bom</artifactId>
      <version>0.1-SNAPSHOT</version>
      <relativePath>../bom</relativePath>
   </parent>
   <modelVersion>4.0.0</modelVersion>

   <artifactId>hono-tests</artifactId>

   <name>Hono Integration Tests</name>
   <description>Integration tests verifying Hono's APIs.
Test cases are run against Docker images of Hono server + (Apache Qpid Dispatch Router | ActiveMQ broker).</description>

   <properties>
     <image.target>hono-test-config</image.target>
     <maven.javadoc.skip>true</maven.javadoc.skip>
   </properties>

   <dependencies>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
      </dependency>
      <dependency>
         <groupId>org.eclipse.hono</groupId>
         <artifactId>hono-client</artifactId>
         <scope>test</scope>
      </dependency>
     <dependency>
        <groupId>org.eclipse.hono</groupId>
        <artifactId>hono-core</artifactId>
        <scope>test</scope>
     </dependency>
     <dependency>
       <groupId>io.vertx</groupId>
       <artifactId>vertx-core</artifactId>
       <scope>test</scope>
     </dependency>
      <dependency>
         <groupId>io.vertx</groupId>
         <artifactId>vertx-proton</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-classic</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>io.vertx</groupId>
         <artifactId>vertx-unit</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.qpid</groupId>
         <artifactId>qpid-jms-client</artifactId>
      </dependency>
   </dependencies>

   <profiles>
      <profile>
         <id>run-tests</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>io.fabric8</groupId>
                  <artifactId>docker-maven-plugin</artifactId>
                  <configuration>
                     <verbose>true</verbose>
                     <images>
                        <!-- ##### volume container with hono server configuration ##### -->
                        <image>
                           <name>eclipsehono/hono-test-config</name>
                           <alias>hono-config</alias>
                           <build>
                              <from>tianon/true</from>
                              <volumes>
                                 <volume>/etc/hono</volume>
                              </volumes>
                              <assembly>
                                 <mode>dir</mode>
                                 <basedir>/etc/hono</basedir>
                                 <inline>
                                    <id>config</id>
                                    <fileSets>
                                       <fileSet>
                                          <directory>${project.basedir}/src/test/resources/server</directory>
                                          <outputDirectory>.</outputDirectory>
                                          <includes>
                                             <include>*</include>
                                          </includes>
                                       </fileSet>
                                    </fileSets>
                                 </inline>
                              </assembly>
                           </build>
                        </image>
                        <!-- ##### Qpid configuration ##### -->
                        <image>
                           <alias>qpid-config</alias>
                           <name>eclipsehono/qpid-default-config:${project.version}</name>
                        </image>
                        <!-- ##### Qpid sasldb ##### -->
                        <image>
                           <alias>qpid-sasldb</alias>
                           <name>eclipsehono/qpid-sasldb:${project.version}</name>
                        </image>
                        <!-- ##### Qpid Dispatch Router ##### -->
                        <image>
                           <alias>qdrouter</alias>
                           <name>gordons/qpid-dispatch:${qpid-dispatch.version}</name>
                           <run>
                              <ports>
                                 <port>+qpid.ip:qpid.amqp.port:5672</port>
                                 <port>qpid.amqp.internal.port:5673</port>
                              </ports>
                              <log>
                                 <prefix>QPID</prefix>
                                 <color>blue</color>
                              </log>
                              <wait>
                              	<log>^.*Operational.*$</log>
                              </wait>
                              <volumes>
                                 <from>
                                    <image>qpid-sasldb</image>
                                    <image>qpid-config</image>
                                 </from>
                              </volumes>
                           </run>
                        </image>
                        <!-- ##### Hono server ##### -->
                        <image>
                           <alias>server</alias>
                           <name>eclipsehono/hono-server:${project.version}</name>
                           <run>
                              <ports>
                                 <port>+hono.ip:hono.amqp.port:5672</port>
                              </ports>
                              <links>
                                 <link>qdrouter</link>
                              </links>
                              <env>
                                 <HONO_MAXINSTANCES>2</HONO_MAXINSTANCES>
                                 <HONO_PERMISSIONS_PATH>file:///etc/hono/permissions.json</HONO_PERMISSIONS_PATH>
                                 <LOGGING_CONFIG>file:///etc/hono/logback-spring.xml</LOGGING_CONFIG>
                                 <SPRING_CONFIG_LOCATION>file:///etc/hono/</SPRING_CONFIG_LOCATION>
                                 <SPRING_PROFILES_ACTIVE>qpid,prod</SPRING_PROFILES_ACTIVE>
                              </env>
                              <log>
                                 <prefix>HONO</prefix>
                                 <color>green</color>
                              </log>
                              <volumes>
                                 <!--<bind>-->
                                 <!-- this is not working on windows machine... have to use volume container -->
                                 <!--<volume>${project.basedir}/src/test/resources/config:/config</volume>-->
                                 <!--</bind>-->
                                 <from>
                                    <image>hono-config</image>
                                 </from>
                              </volumes>
                              <wait>
                                 <log>^.*(HonoServer running at).*$</log>
                              </wait>
                           </run>
                        </image>
                     </images>
                  </configuration>
                  <executions>
                     <execution>
                        <phase>package</phase>
                        <goals>
                           <goal>build</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>start-docker</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                           <goal>start</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>stop-docker</id>
                        <phase>post-integration-test</phase>
                        <goals>
                           <goal>stop</goal>
                           <goal>remove</goal>
                        </goals>
                        <configuration>
                           <removeVolumes>true</removeVolumes>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <skip>true</skip>
                  </configuration>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-failsafe-plugin</artifactId>
                  <configuration>
                     <systemProperties>
                        <hono.host>${hono.ip}</hono.host>
                        <hono.amqp.port>${hono.amqp.port}</hono.amqp.port>
                        <downstream.host>${qpid.ip}</downstream.host>
                        <downstream.amqp.port>${qpid.amqp.port}</downstream.amqp.port>
                     </systemProperties>
                     <includes>
                        <include>**/*IT.java</include>
                     </includes>
                  </configuration>
                  <executions>
                     <execution>
                        <id>run-integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                           <goal>integration-test</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>run-activemq-tests</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>io.fabric8</groupId>
                  <artifactId>docker-maven-plugin</artifactId>
                  <configuration>
                     <verbose>true</verbose>
                     <images>
                        <!-- ##### volume container with hono server configuration ##### -->
                        <image>
                           <name>eclipsehono/hono-test-config</name>
                           <alias>hono-config</alias>
                           <build>
                              <from>tianon/true</from>
                              <volumes>
                                 <volume>/etc/hono</volume>
                              </volumes>
                              <assembly>
                                 <mode>dir</mode>
                                 <basedir>/etc/hono</basedir>
                                 <inline>
                                    <id>config</id>
                                    <fileSets>
                                       <fileSet>
                                          <directory>${project.basedir}/src/test/resources/server</directory>
                                          <outputDirectory>.</outputDirectory>
                                          <includes>
                                             <include>*</include>
                                          </includes>
                                       </fileSet>
                                    </fileSets>
                                 </inline>
                              </assembly>
                           </build>
                        </image>
                        <!-- ##### ActiveMQ Broker ##### -->
                        <image>
                           <alias>activemq</alias>
                           <name>rmohr/activemq:${activemq.version}</name>
                           <run>
                              <ports>
                                 <port>+broker.ip:broker.amqp.port:5672</port>
                              </ports>
                              <log>
                                 <prefix>ACTIVEMQ</prefix>
                                 <color>blue</color>
                              </log>
                              <wait>
                              	<log>^.*Connector amqp started.*$</log>
                              </wait>
                           </run>
                        </image>
                        <!-- ##### Hono server ##### -->
                        <image>
                           <alias>server</alias>
                           <name>eclipsehono/hono-server:${project.version}</name>
                           <run>
                              <ports>
                                 <port>+hono.ip:hono.amqp.port:5672</port>
                              </ports>
                              <links>
                                 <link>activemq</link>
                              </links>
                              <env>
                                 <HONO_MAXINSTANCES>2</HONO_MAXINSTANCES>
                                 <HONO_PERMISSIONS_PATH>file:/etc/hono/permissions.json</HONO_PERMISSIONS_PATH>
                                 <!-- HONO_TELEMETRY_DOWNSTREAM_HOST>activemq</HONO_TELEMETRY_DOWNSTREAM_HOST>
                                 <HONO_TELEMETRY_PATHSEPARATOR>.</HONO_TELEMETRY_PATHSEPARATOR-->
                                 <LOGGING_CONFIG>file:///etc/hono/logback-spring.xml</LOGGING_CONFIG>
                                 <SPRING_CONFIG_LOCATION>file:/etc/hono/</SPRING_CONFIG_LOCATION>
                                 <SPRING_PROFILES_ACTIVE>activemq,prod</SPRING_PROFILES_ACTIVE>
                              </env>
                              <log>
                                 <prefix>HONO</prefix>
                                 <color>green</color>
                              </log>
                              <volumes>
                                 <!--<bind>-->
                                 <!-- this is not working on windows machine... have to use volume container -->
                                 <!--<volume>${project.basedir}/src/test/resources/config:/config</volume>-->
                                 <!--</bind>-->
                                 <from>
                                    <image>hono-config</image>
                                 </from>
                              </volumes>
                              <wait>
                                 <log>^.*(HonoServer running at).*$</log>
                              </wait>
                           </run>
                        </image>
                     </images>
                  </configuration>
                  <executions>
                     <execution>
                        <phase>package</phase>
                        <goals>
                           <goal>build</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>start-docker</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                           <goal>start</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>stop-docker</id>
                        <phase>post-integration-test</phase>
                        <goals>
                           <goal>stop</goal>
                           <goal>remove</goal>
                        </goals>
                        <configuration>
                           <removeVolumes>true</removeVolumes>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <skip>true</skip>
                  </configuration>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-failsafe-plugin</artifactId>
                  <configuration>
                     <systemProperties>
                        <hono.host>${hono.ip}</hono.host>
                        <hono.amqp.port>${hono.amqp.port}</hono.amqp.port>
                        <hono.telemetry.pathSeparator>.</hono.telemetry.pathSeparator>
                        <downstream.host>${broker.ip}</downstream.host>
                        <downstream.amqp.port>${broker.amqp.port}</downstream.amqp.port>
                     </systemProperties>
                     <includes>
                        <include>**/*IT.java</include>
                     </includes>
                  </configuration>
                  <executions>
                     <execution>
                        <id>run-integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                           <goal>integration-test</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>